// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NavBarHeaderComponent /> take snapshot for header 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBarHeaderComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Navbar
        color="white"
        expand="md"
        light={true}
        tag="nav"
      >
        <NavbarBrand
          href="/"
          tag="a"
        >
          <TitleComponent
            pathname="/"
          />
        </NavbarBrand>
        <NavbarToggler
          onClick={[Function]}
          tag="button"
          type="button"
        />
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          navbar={true}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Nav
            className="ml-auto"
            navbar={true}
            tag="ul"
            vertical={false}
          >
            <NavItemsComponent
              pathname="/"
            />
          </Nav>
        </Collapse>
      </Navbar>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <NavbarBrand
            href="/"
            tag="a"
          >
            <TitleComponent
              pathname="/"
            />
          </NavbarBrand>,
          <NavbarToggler
            onClick={[Function]}
            tag="button"
            type="button"
          />,
          <Collapse
            appear={false}
            enter={true}
            exit={true}
            in={false}
            isOpen={false}
            mountOnEnter={false}
            navbar={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            tag="div"
            timeout={350}
            unmountOnExit={false}
          >
            <Nav
              className="ml-auto"
              navbar={true}
              tag="ul"
              vertical={false}
            >
              <NavItemsComponent
                pathname="/"
              />
            </Nav>
          </Collapse>,
        ],
        "color": "white",
        "expand": "md",
        "light": true,
        "tag": "nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <TitleComponent
              pathname="/"
            />,
            "href": "/",
            "tag": "a",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "pathname": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClick": [Function],
            "tag": "button",
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "appear": false,
            "children": <Nav
              className="ml-auto"
              navbar={true}
              tag="ul"
              vertical={false}
            >
              <NavItemsComponent
                pathname="/"
              />
            </Nav>,
            "enter": true,
            "exit": true,
            "in": false,
            "isOpen": false,
            "mountOnEnter": false,
            "navbar": true,
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "tag": "div",
            "timeout": 350,
            "unmountOnExit": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <NavItemsComponent
                pathname="/"
              />,
              "className": "ml-auto",
              "navbar": true,
              "tag": "ul",
              "vertical": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "pathname": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Navbar
          color="white"
          expand="md"
          light={true}
          tag="nav"
        >
          <NavbarBrand
            href="/"
            tag="a"
          >
            <TitleComponent
              pathname="/"
            />
          </NavbarBrand>
          <NavbarToggler
            onClick={[Function]}
            tag="button"
            type="button"
          />
          <Collapse
            appear={false}
            enter={true}
            exit={true}
            in={false}
            isOpen={false}
            mountOnEnter={false}
            navbar={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            tag="div"
            timeout={350}
            unmountOnExit={false}
          >
            <Nav
              className="ml-auto"
              navbar={true}
              tag="ul"
              vertical={false}
            >
              <NavItemsComponent
                pathname="/"
              />
            </Nav>
          </Collapse>
        </Navbar>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <NavbarBrand
              href="/"
              tag="a"
            >
              <TitleComponent
                pathname="/"
              />
            </NavbarBrand>,
            <NavbarToggler
              onClick={[Function]}
              tag="button"
              type="button"
            />,
            <Collapse
              appear={false}
              enter={true}
              exit={true}
              in={false}
              isOpen={false}
              mountOnEnter={false}
              navbar={true}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              tag="div"
              timeout={350}
              unmountOnExit={false}
            >
              <Nav
                className="ml-auto"
                navbar={true}
                tag="ul"
                vertical={false}
              >
                <NavItemsComponent
                  pathname="/"
                />
              </Nav>
            </Collapse>,
          ],
          "color": "white",
          "expand": "md",
          "light": true,
          "tag": "nav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <TitleComponent
                pathname="/"
              />,
              "href": "/",
              "tag": "a",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "pathname": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onClick": [Function],
              "tag": "button",
              "type": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appear": false,
              "children": <Nav
                className="ml-auto"
                navbar={true}
                tag="ul"
                vertical={false}
              >
                <NavItemsComponent
                  pathname="/"
                />
              </Nav>,
              "enter": true,
              "exit": true,
              "in": false,
              "isOpen": false,
              "mountOnEnter": false,
              "navbar": true,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 350,
              "unmountOnExit": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <NavItemsComponent
                  pathname="/"
                />,
                "className": "ml-auto",
                "navbar": true,
                "tag": "ul",
                "vertical": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "pathname": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
